name: CI/CD - AI Resume Evaluator

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff pytest allure-pytest

      - name: Run Python linting and auto-fix with Ruff
        working-directory: backend
        run: ruff check . --fix

      - name: Check for remaining lint errors after auto-fix
        working-directory: backend
        run: ruff check .

      - name: Download resume_embeddings.pkl
        working-directory: backend
        run: |
          curl -L -o resume_embeddings.pkl "https://drive.google.com/uc?export=download&id=1oM5yvJy3ugBHZ_RZOhZxlV3cESZwRZKP"

      - name: Run prompt-based API tests
        run: pytest backend/tests/test_main.py

      - name: Install Allure CLI
        run: |
          sudo apt-add-repository ppa:qameta/allure -y
          sudo apt-get update
          sudo apt-get install allure -y

      - name: Run Allure tests and generate report
        run: |
          pytest --alluredir=allure-results backend/tests/test_try1.py backend/tests/test_try2.py
          allure generate allure-results --clean -o allure-report

      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Trigger Render Deployment
        run: curl -X POST $RENDER_DEPLOY_HOOK
